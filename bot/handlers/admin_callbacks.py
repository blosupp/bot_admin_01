from aiogram import Router, types, F
from aiogram.types import CallbackQuery
from database.crud import get_last_logs, clear_logs, get_all_users
from database.crud import add_log

router = Router()

@router.callback_query(F.data == "view_logs")
async def handle_view_logs(callback: CallbackQuery):
    await add_log(callback.from_user.id, "adminpanel", "–ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª –ª–æ–≥–∏")
    logs = await get_last_logs(limit=10)
    if not logs:
        await callback.message.edit_text("üì≠ –õ–æ–≥–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.")
        return

    text = "üìú <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:</b>\n\n"
    for log in logs:
        username = f"@{log.user.username}" if log.user and log.user.username else f"ID: {log.user_id}"
        text += f"‚Ä¢ [{log.created_at.strftime('%d.%m.%Y %H:%M')}] {username}: {log.description}\n"
    await callback.message.edit_text(text)


@router.callback_query(F.data == "clear_logs")
async def handle_clear_logs(callback: CallbackQuery):
    await clear_logs()
    await add_log(callback.from_user.id, "adminpanel", "–æ—á–∏—Å—Ç–∏–ª –ª–æ–≥–∏")
    await callback.message.edit_text("üßπ –õ–æ–≥–∏ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã.")


@router.callback_query(F.data == "user_management")
async def handle_user_management(callback: CallbackQuery):
    await add_log(callback.from_user.id, "adminpanel", "–æ—Ç–∫—Ä—ã–ª —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    users = await get_all_users()
    if not users:
        await callback.message.edit_text("üôà –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return

    text = "üë• <b>–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b>\n\n"
    for user in users:
        name = f"@{user.username}" if user.username else f"ID: {user.id}"
        text += f"‚Ä¢ {name} ‚Äî <i>{user.role}</i>\n"
    await callback.message.edit_text(text)
