from aiogram import Router, types, F, Bot
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.exceptions import TelegramForbiddenError

from database.crud import add_channel, get_user_channels, delete_channel

router = Router()

# –°–æ—Å—Ç–æ—è–Ω–∏–µ FSM
class ChannelState(StatesGroup):
    waiting_for_forward = State()


# –ö–æ–º–∞–Ω–¥–∞ /add_channel
@router.message(Command("add_channel"))
async def add_channel_entry(message: types.Message, state: FSMContext, bot: Bot):
    user_id = message.from_user.id
    args = message.text.split(maxsplit=2)

    # ‚úÖ –í–∞—Ä–∏–∞–Ω—Ç 1: —Ä—É—á–Ω–æ–π –≤–≤–æ–¥
    if len(args) == 3:
        title = args[1]
        channel_id_or_username = args[2]

        try:
            chat = await bot.get_chat(channel_id_or_username)
            member = await bot.get_chat_member(chat.id, bot.id)

            if member.status not in ("administrator", "creator"):
                await message.answer("‚ùå –Ø –Ω–µ –∞–¥–º–∏–Ω –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ. –î–æ–±–∞–≤—å –º–µ–Ω—è –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
                return

            await add_channel(owner_id=user_id, title=title, channel_id=chat.id)
            await message.answer(f"‚úÖ –ö–∞–Ω–∞–ª ¬´{title}¬ª –¥–æ–±–∞–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é.")
            return

        except Exception as e:
            await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞:\n<code>{e}</code>", parse_mode="HTML")
            return

    # üì® –í–∞—Ä–∏–∞–Ω—Ç 2: FSM ‚Äî –∂–¥—ë–º –ø–µ—Ä–µ—Å—ã–ª–∫—É
    await state.set_state(ChannelState.waiting_for_forward)
    await message.answer("üì© –ü–µ—Ä–µ—à–ª–∏ –ø–æ—Å—Ç –∏–∑ –∫–∞–Ω–∞–ª–∞, —á—Ç–æ–±—ã —è –¥–æ–±–∞–≤–∏–ª –µ–≥–æ.")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
@router.message(ChannelState.waiting_for_forward)
async def receive_forwarded_channel(message: types.Message, state: FSMContext, bot: Bot):
    user_id = message.from_user.id
    channel = message.forward_from_chat

    print("‚û°Ô∏è FORWARD DEBUG:", channel)

    if channel is None:
        await message.answer("‚ùå –ù–µ –º–æ–≥—É –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞–Ω–∞–ª. –£–±–µ–¥–∏—Å—å, —á—Ç–æ —Ç—ã –ø–µ—Ä–µ—Å–ª–∞–ª –∏–º–µ–Ω–Ω–æ –ø–æ—Å—Ç, –∞ –Ω–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–ª —Ç–µ–∫—Å—Ç.")
        return

    title = channel.title
    chat_id = channel.id

    try:
        member = await bot.get_chat_member(chat_id=chat_id, user_id=bot.id)
        if member.status not in ("administrator", "creator"):
            await message.answer("‚ùå –Ø –Ω–µ –∞–¥–º–∏–Ω –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ. –î–æ–±–∞–≤—å –º–µ–Ω—è –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
            return
    except TelegramForbiddenError:
        await message.answer("‚ùå –Ø –Ω–µ –º–æ–≥—É –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–Ω–∞–ª. –£–±–µ–¥–∏—Å—å, —á—Ç–æ —è –¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∫ –∞–¥–º–∏–Ω.")
        return

    await add_channel(owner_id=user_id, title=title, channel_id=chat_id)
    await message.answer(f"‚úÖ –ö–∞–Ω–∞–ª ¬´{title}¬ª –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ –ø–µ—Ä–µ—Å—ã–ª–∫–µ.")
    await state.clear()


# –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤
@router.message(Command("my_channels"))
async def list_channels(message: types.Message):
    channels = await get_user_channels(message.from_user.id)
    if not channels:
        await message.answer("üì≠ –£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –∫–∞–Ω–∞–ª–æ–≤.")
        return

    keyboard = [
        [
            InlineKeyboardButton(
                text=f"üóë –£–¥–∞–ª–∏—Ç—å ¬´{ch.title}¬ª",
                callback_data=f"delete_channel:{ch.id}"
            )
        ] for ch in channels
    ]

    await message.answer("üìã –¢–≤–æ–∏ –∫–∞–Ω–∞–ª—ã:", reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard))


# –£–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª
@router.callback_query(F.data.startswith("delete_channel:"))
async def delete_channel_callback(callback: types.CallbackQuery):
    channel_id = int(callback.data.split(":")[1])
    user_id = callback.from_user.id

    await delete_channel(channel_id=channel_id, owner_id=user_id)

    await callback.answer("‚úÖ –£–¥–∞–ª–µ–Ω–æ.")
    await callback.message.delete()