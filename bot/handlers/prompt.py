from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

router = Router()

user_prompts = {}

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–∞
class PromptState(StatesGroup):
    waiting_for_prompt = State()

@router.message(Command("prompt"))
async def handle_prompt(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    current = user_prompts.get(user_id, "üìù –ü—Ä–æ–º—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é...")
    await message.answer(f"–¢–µ–∫—É—â–∏–π –ø—Ä–æ–º—Ç:\n\n{current}\n\n‚úèÔ∏è –ù–∞–ø–∏—à–∏ –Ω–æ–≤—ã–π –ø—Ä–æ–º—Ç:")
    await state.set_state(PromptState.waiting_for_prompt)

@router.message(PromptState.waiting_for_prompt)
async def save_prompt(message: types.Message, state: FSMContext):
    user_prompts[message.from_user.id] = message.text
    await message.answer("‚úÖ –ü—Ä–æ–º—Ç –æ–±–Ω–æ–≤–ª—ë–Ω!")
    await state.clear()
